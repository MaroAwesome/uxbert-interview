{"ast":null,"code":"var _jsxFileName = \"/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redux } from \"../lib/redux\";\nimport useInterval from \"../lib/useInterval\";\nimport Clock from \"../components/clock\";\nimport Counter from \"../components/counter\";\nimport Form from \"../components/form\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst IndexPage = () => {\n  // Tick the time every second\n  const dispatch = useDispatch();\n  useInterval(() => {\n    dispatch({\n      type: \"TICK\",\n      light: true,\n      lastUpdate: Date.now()\n    });\n  }, 1000);\n  useEffect(() => {\n    const rootElement = document.getElementById(\"root\");\n    ReactDOM.render(__jsx(App, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }), rootElement);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Route, {\n    exact: true,\n    path: \"/\",\n    component: Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    path: \"/step2\",\n    component: Counter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })));\n};\n\nIndexPage.getInitialProps = ({\n  reduxStore\n}) => {\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  const {\n    dispatch\n  } = reduxStore;\n  dispatch({\n    type: \"TICK\",\n    light: false,\n    lastUpdate: Date.now()\n  });\n  return {};\n};\n\nexport default Redux(IndexPage);","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/index.js"],"names":["React","useEffect","useDispatch","Redux","useInterval","Clock","Counter","Form","BrowserRouter","Router","Route","IndexPage","dispatch","type","light","lastUpdate","Date","now","rootElement","document","getElementById","ReactDOM","render","getInitialProps","reduxStore"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACAE,EAAAA,WAAW,CAAC,MAAM;AAChBQ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,KAAK,EAAE,IAFA;AAGPC,MAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAHL,KAAD,CAAR;AAKD,GANU,EAMR,IANQ,CAAX;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAC,IAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EAAyBJ,WAAzB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEX,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAED,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAvBD;;AAyBAK,SAAS,CAACY,eAAV,GAA4B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC9C;AACA;AACA,QAAM;AAAEZ,IAAAA;AAAF,MAAeY,UAArB;AACAZ,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,KAAK,OAFE;AAGPC,IAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAHL,GAAD,CAAR;AAMA,SAAO,EAAP;AACD,CAXD;;AAaA,eAAed,KAAK,CAACQ,SAAD,CAApB","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redux } from \"../lib/redux\";\nimport useInterval from \"../lib/useInterval\";\nimport Clock from \"../components/clock\";\nimport Counter from \"../components/counter\";\nimport Form from \"../components/form\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst IndexPage = () => {\n  // Tick the time every second\n  const dispatch = useDispatch();\n  useInterval(() => {\n    dispatch({\n      type: \"TICK\",\n      light: true,\n      lastUpdate: Date.now(),\n    });\n  }, 1000);\n  useEffect(() => {\n    const rootElement = document.getElementById(\"root\");\n    ReactDOM.render(<App />, rootElement);\n  }, []);\n\n  return (\n    <>\n      <Router>\n        <Route exact path=\"/\" component={Form} />\n        <Route path=\"/step2\" component={Counter} />\n      </Router>\n    </>\n  );\n};\n\nIndexPage.getInitialProps = ({ reduxStore }) => {\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  const { dispatch } = reduxStore;\n  dispatch({\n    type: \"TICK\",\n    light: typeof window === \"object\",\n    lastUpdate: Date.now(),\n  });\n\n  return {};\n};\n\nexport default Redux(IndexPage);\n"]},"metadata":{},"sourceType":"module"}