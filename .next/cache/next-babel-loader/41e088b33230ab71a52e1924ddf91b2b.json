{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nvar exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  form: {\n    fullName: \"\",\n    email: \"\",\n    password: \"\"\n  },\n  exampleData: [],\n  error: null\n};\nexport var actionTypes = {\n  TICK: \"TICK\",\n  Submit: \"Submit\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  RESET: \"RESET\",\n  LOAD_EXAMPLE_DATA: \"LOAD_EXAMPLE_DATA\",\n  LOADING_DATA_FAILURE: \"LOADING_DATA_FAILURE\"\n}; // REDUCERS\n\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.Submit:\n      return Object.assign({}, state, {\n        form: action.form\n      });\n\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return Object.assign({}, state, {\n        exampleData: action.data\n      });\n\n    case actionTypes.LOADING_DATA_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\nexport var SubmitForm = function SubmitForm(data) {\n  return {\n    type: actionTypes.Submit,\n    data: data\n  };\n};\n_c = SubmitForm;\nvar persistConfig = {\n  key: \"primary\",\n  storage: storage,\n  whitelist: [\"form\"] // place to select which state you want to persist\n\n};\nvar persistedReducer = persistReducer(persistConfig, reducer);\nexport function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware()));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitForm\");","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","persistReducer","storage","exampleInitialState","lastUpdate","light","count","form","fullName","email","password","exampleData","error","actionTypes","TICK","Submit","INCREMENT","DECREMENT","RESET","LOAD_EXAMPLE_DATA","LOADING_DATA_FAILURE","reducer","state","action","type","Object","assign","ts","data","SubmitForm","persistConfig","key","whitelist","persistedReducer","initializeStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,UAAU,EAAE,CADc;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,KAAK,EAAE,CAHmB;AAI1BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAJoB;AAS1BC,EAAAA,WAAW,EAAE,EATa;AAU1BC,EAAAA,KAAK,EAAE;AAVmB,CAA5B;AAYA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,MAAM,EAAE,QAFiB;AAGzBC,EAAAA,SAAS,EAAE,WAHc;AAIzBC,EAAAA,SAAS,EAAE,WAJc;AAKzBC,EAAAA,KAAK,EAAE,OALkB;AAMzBC,EAAAA,iBAAiB,EAAE,mBANM;AAOzBC,EAAAA,oBAAoB,EAAE;AAPG,CAApB,C,CAUP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCnB,mBAAgC;AAAA,MAAXoB,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACE,MAAjB;AACE,aAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9Bf,QAAAA,IAAI,EAAEgB,MAAM,CAAChB;AADiB,OAAzB,CAAP;;AAGF,SAAKM,WAAW,CAACC,IAAjB;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BlB,QAAAA,UAAU,EAAEmB,MAAM,CAACI,EADW;AAE9BtB,QAAAA,KAAK,EAAE,CAAC,CAACkB,MAAM,CAAClB;AAFc,OAAzB,CAAP;;AAIF,SAAKQ,WAAW,CAACG,SAAjB;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BhB,QAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKO,WAAW,CAACI,SAAjB;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BhB,QAAAA,KAAK,EAAEgB,KAAK,CAAChB,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKO,WAAW,CAACK,KAAjB;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BhB,QAAAA,KAAK,EAAEH,mBAAmB,CAACG;AADG,OAAzB,CAAP;;AAGF,SAAKO,WAAW,CAACM,iBAAjB;AACE,aAAOM,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BX,QAAAA,WAAW,EAAEY,MAAM,CAACK;AADU,OAAzB,CAAP;;AAGF,SAAKf,WAAW,CAACO,oBAAjB;AACE,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BV,QAAAA,KAAK,EAAE;AADuB,OAAzB,CAAP;;AAGF;AACE,aAAOU,KAAP;AA/BJ;AAiCD,CAlCM;AAmCP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD,EAAU;AAClC,SAAO;AAAEJ,IAAAA,IAAI,EAAEX,WAAW,CAACE,MAApB;AAA4Ba,IAAAA,IAAI,EAAJA;AAA5B,GAAP;AACD,CAFM;KAAMC,U;AAIb,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,SADe;AAEpB7B,EAAAA,OAAO,EAAPA,OAFoB;AAGpB8B,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHS,CAGC;;AAHD,CAAtB;AAMA,IAAMC,gBAAgB,GAAGhC,cAAc,CAAC6B,aAAD,EAAgBT,OAAhB,CAAvC;AAEA,OAAO,SAASa,eAAT,GAA6D;AAAA,MAApCC,YAAoC,uEAArBhC,mBAAqB;AAClE,SAAOL,WAAW,CAChBmC,gBADgB,EAEhBE,YAFgB,EAGhBnC,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  form: {\n    fullName: \"\",\n    email: \"\",\n    password: \"\",\n  },\n  exampleData: [],\n  error: null,\n};\nexport const actionTypes = {\n  TICK: \"TICK\",\n  Submit: \"Submit\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  RESET: \"RESET\",\n  LOAD_EXAMPLE_DATA: \"LOAD_EXAMPLE_DATA\",\n  LOADING_DATA_FAILURE: \"LOADING_DATA_FAILURE\",\n};\n\n// REDUCERS\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.Submit:\n      return Object.assign({}, state, {\n        form: action.form,\n      });\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light,\n      });\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1,\n      });\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1,\n      });\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count,\n      });\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return Object.assign({}, state, {\n        exampleData: action.data,\n      });\n    case actionTypes.LOADING_DATA_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    default:\n      return state;\n  }\n};\nexport const SubmitForm = (data) => {\n  return { type: actionTypes.Submit, data };\n};\n\nconst persistConfig = {\n  key: \"primary\",\n  storage,\n  whitelist: [\"form\"], // place to select which state you want to persist\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware())\n  );\n}\n"]},"metadata":{},"sourceType":"module"}