{"ast":null,"code":"var _jsxFileName = \"/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from \"next/app\";\nimport React from \"react\";\nimport withReduxStore from \"../lib/with-redux-store\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.persistor = persistStore(props.reduxStore);\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(PersistGate, {\n      loading: __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }\n      })),\n      persistor: this.persistor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default withReduxStore(MyApp);","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/_app.js"],"names":["App","React","withReduxStore","Router","Provider","persistStore","PersistGate","MyApp","constructor","props","persistor","reduxStore","getInitialProps","Component","ctx","pageProps","render"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AACtBQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiBL,YAAY,CAACI,KAAK,CAACE,UAAP,CAA7B;AACD;;AACD,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBJ,MAAAA;AAAxB,QAAuC,KAAKF,KAAlD;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AACE,MAAA,OAAO,EAAE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADX;AAEE,MAAA,SAAS,EAAE,KAAKL,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,CADF,CADF;AAUD;;AAxBqB;;AA2BxB,eAAeb,cAAc,CAACK,KAAD,CAA7B","sourcesContent":["import App from \"next/app\";\nimport React from \"react\";\nimport withReduxStore from \"../lib/with-redux-store\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.persistor = persistStore(props.reduxStore);\n  }\n  static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    return { pageProps };\n  }\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n    return (\n      <Provider store={reduxStore}>\n        <PersistGate\n          loading={<Component {...pageProps} />}\n          persistor={this.persistor}\n        >\n          <Component {...pageProps} />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxStore(MyApp);\n"]},"metadata":{},"sourceType":"module"}