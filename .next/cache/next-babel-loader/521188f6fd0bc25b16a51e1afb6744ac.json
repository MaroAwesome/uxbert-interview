{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tcc/Desktop/uxbreit - interview/simple-profile/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\n\nvar Form = function Form(props) {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var dispatch = useDispatch();\n\n  var onSubit = function onSubit(data) {\n    dispatch({\n      type: \"Submit\",\n      form: data\n    });\n    Router.push(\"/profile\");\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-4 col-md-6 ml-auto mr-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"card card-login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"card-header card-header-primary text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    className: \"card-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, \"Register\")), __jsx(\"p\", {\n    className: \"description text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Fill the form to complete your profile\"), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group-prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, __jsx(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"face\"))), __jsx(\"input\", {\n    name: \"fullName\",\n    className: \"form-control\",\n    placeholder: \"Full Name...\",\n    ref: register({\n      required: \"Required\",\n      minLength: 3\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \" \", errors.fullName && (errors.fullName.message || \"Full name Must be minimum of 3 characters\"))), __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group-prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, __jsx(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"mail\"))), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    placeholder: \"Email...\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \" \", errors.email && errors.email.message)), __jsx(\"div\", {\n    className: \"input-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"input-group-prepend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, __jsx(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"lock_outline\"))), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    placeholder: \"Password...\",\n    ref: register({\n      required: \"Required\",\n      pattern: {\n        value: /^(?=.*\\d)(?=.*[a-z])(?=.*[a-zA-Z]).{6,}/,\n        message: \"the password needs to have at least a letter and a number with a minimum of 6 characters\"\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), __jsx(\"small\", {\n    className: \"form-text text-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \" \", errors.password && errors.password.message))), __jsx(\"div\", {\n    className: \"form-check form-check-radio form-check-inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"gender\",\n    id: \"inlineRadio1\",\n    value: \"Male\",\n    ref: register({}),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), \" \", \"Male\", __jsx(\"span\", {\n    className: \"circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  })))), __jsx(\"div\", {\n    className: \"form-check form-check-radio form-check-inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"gender\",\n    id: \"inlineRadio2\",\n    value: \"Female\",\n    ref: register({}),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), \" \", \"Female\", __jsx(\"span\", {\n    className: \"circle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    className: \"check\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  })))), __jsx(\"div\", {\n    className: \"footer text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"btn btn-primary btn-link btn-wd btn-lg\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\n_s(Form, \"012EqLZAv/QIX9EE51Ue+fA3keU=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/simple-profile/components/form.js"],"names":["useForm","useDispatch","Router","Form","props","register","handleSubmit","errors","dispatch","onSubit","data","type","form","push","required","minLength","fullName","message","pattern","value","email","password"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\n\nconst Form = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubit = (data) => {\n    dispatch({\n      type: \"Submit\",\n      form: data,\n    });\n    Router.push(\"/profile\");\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-6 ml-auto mr-auto\">\n            <div className=\"card card-login\">\n              <form className=\"form\" onSubmit={handleSubmit(onSubit)}>\n                <div className=\"card-header card-header-primary text-center\">\n                  <h4 className=\"card-title\">Register</h4>\n                </div>\n                <p className=\"description text-center\">\n                  Fill the form to complete your profile\n                </p>\n                <div className=\"card-body\">\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"material-icons\">face</i>\n                      </span>\n                    </div>\n\n                    <input\n                      name=\"fullName\"\n                      className=\"form-control\"\n                      placeholder=\"Full Name...\"\n                      ref={register({ required: \"Required\", minLength: 3 })}\n                    />\n                    <small className=\"form-text text-danger\">\n                      {\" \"}\n                      {errors.fullName &&\n                        (errors.fullName.message ||\n                          \"Full name Must be minimum of 3 characters\")}\n                    </small>\n                  </div>\n\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"material-icons\">mail</i>\n                      </span>\n                    </div>\n\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"Email...\"\n                      ref={register({\n                        required: \"Required\",\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                          message: \"invalid email address\",\n                        },\n                      })}\n                    />\n                    <small className=\"form-text text-danger\">\n                      {\" \"}\n                      {errors.email && errors.email.message}\n                    </small>\n                  </div>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"material-icons\">lock_outline</i>\n                      </span>\n                    </div>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Password...\"\n                      ref={register({\n                        required: \"Required\",\n                        pattern: {\n                          value: /^(?=.*\\d)(?=.*[a-z])(?=.*[a-zA-Z]).{6,}/,\n                          message:\n                            \"the password needs to have at least a letter and a number with a minimum of 6 characters\",\n                        },\n                      })}\n                    />\n                    <small className=\"form-text text-danger\">\n                      {\" \"}\n                      {errors.password && errors.password.message}\n                    </small>\n                  </div>\n                </div>\n                <div className=\"form-check form-check-radio form-check-inline\">\n                  <label className=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"gender\"\n                      id=\"inlineRadio1\"\n                      value=\"Male\"\n                      ref={register({})}\n                    />{\" \"}\n                    Male\n                    <span className=\"circle\">\n                      <span className=\"check\"></span>\n                    </span>\n                  </label>\n                </div>\n                <div className=\"form-check form-check-radio form-check-inline\">\n                  <label className=\"form-check-label\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"gender\"\n                      id=\"inlineRadio2\"\n                      value=\"Female\"\n                      ref={register({})}\n                    />{\" \"}\n                    Female\n                    <span className=\"circle\">\n                      <span className=\"check\"></span>\n                    </span>\n                  </label>\n                </div>\n                <div className=\"footer text-center\">\n                  <input\n                    className=\"btn btn-primary btn-link btn-wd btn-lg\"\n                    type=\"submit\"\n                  />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}