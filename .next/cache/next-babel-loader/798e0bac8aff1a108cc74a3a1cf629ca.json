{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  form: \"test\",\n  exampleData: [],\n  error: null\n};\nexport const actionTypes = {\n  TICK: \"TICK\",\n  Submit: \"Submit\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  RESET: \"RESET\",\n  LOAD_EXAMPLE_DATA: \"LOAD_EXAMPLE_DATA\",\n  LOADING_DATA_FAILURE: \"LOADING_DATA_FAILURE\"\n}; // REDUCERS\n\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.Submit:\n      return Object.assign({}, state, {\n        form: state.form\n      });\n\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return Object.assign({}, state, {\n        exampleData: action.data\n      });\n\n    case actionTypes.LOADING_DATA_FAILURE:\n      return Object.assign({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\nconst persistConfig = {\n  key: \"primary\",\n  storage,\n  whitelist: [\"\"] // place to select which state you want to persist\n\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware()));\n}","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","persistReducer","storage","exampleInitialState","lastUpdate","light","count","form","exampleData","error","actionTypes","TICK","Submit","INCREMENT","DECREMENT","RESET","LOAD_EXAMPLE_DATA","LOADING_DATA_FAILURE","reducer","state","action","type","Object","assign","ts","data","persistConfig","key","whitelist","persistedReducer","initializeStore","initialState"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  form: \"test\",\n  exampleData: [],\n  error: null,\n};\nexport const actionTypes = {\n  TICK: \"TICK\",\n  Submit: \"Submit\",\n  INCREMENT: \"INCREMENT\",\n  DECREMENT: \"DECREMENT\",\n  RESET: \"RESET\",\n  LOAD_EXAMPLE_DATA: \"LOAD_EXAMPLE_DATA\",\n  LOADING_DATA_FAILURE: \"LOADING_DATA_FAILURE\",\n};\n\n// REDUCERS\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.Submit:\n      return Object.assign({}, state, {\n        form: state.form,\n      });\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light,\n      });\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1,\n      });\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1,\n      });\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count,\n      });\n    case actionTypes.LOAD_EXAMPLE_DATA:\n      return Object.assign({}, state, {\n        exampleData: action.data,\n      });\n    case actionTypes.LOADING_DATA_FAILURE:\n      return Object.assign({}, state, {\n        error: true,\n      });\n    default:\n      return state;\n  }\n};\nconst persistConfig = {\n  key: \"primary\",\n  storage,\n  whitelist: [\"\"], // place to select which state you want to persist\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware())\n  );\n}\n"]},"metadata":{},"sourceType":"module"}