{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from \"next/app\";\nimport React from \"react\";\nimport withReduxStore from \"../lib/with-redux-store\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp(props) {\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    _this = _super.call(this, props);\n    _this.persistor = persistStore(props.reduxStore);\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pathname = Router.pathname;\n      console.log(pathname);\n      console.log(this.props);\n      this.props.reduxStore.subscribe(function () {\n        console.log(_this2.props.reduxStore.getState());\n\n        var _this2$props$reduxSto = _this2.props.reduxStore.getState(),\n            form = _this2$props$reduxSto.form;\n\n        if (pathname == \"/\" && (form.fullName !== \"\" || form.email !== \"\" || form.password !== \"\")) {\n          Router.push(\"/profile\");\n        }\n\n        if (pathname == \"/profile\" && (form.fullName == \"\" || form.email == \"\" || form.password == \"\")) {\n          Router.push(\"/\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          reduxStore = _this$props.reduxStore;\n      return __jsx(Provider, {\n        store: reduxStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, __jsx(PersistGate, {\n        loading: __jsx(Component, _extends({}, pageProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }\n        })),\n        persistor: this.persistor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default _c = withReduxStore(MyApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/_app.js"],"names":["App","React","withReduxStore","Router","Provider","persistStore","PersistGate","MyApp","props","persistor","reduxStore","pathname","console","log","subscribe","getState","form","fullName","email","password","push","Component","pageProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,SAAL,GAAiBJ,YAAY,CAACG,KAAK,CAACE,UAAP,CAA7B;AAFiB;AAGlB;;;;wCAEmB;AAAA;;AAAA,UACVC,QADU,GACGR,MADH,CACVQ,QADU;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,WAAKA,KAAL,CAAWE,UAAX,CAAsBI,SAAtB,CAAgC,YAAM;AACpCF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACL,KAAL,CAAWE,UAAX,CAAsBK,QAAtB,EAAZ;;AADoC,oCAEnB,MAAI,CAACP,KAAL,CAAWE,UAAX,CAAsBK,QAAtB,EAFmB;AAAA,YAE5BC,IAF4B,yBAE5BA,IAF4B;;AAGpC,YACEL,QAAQ,IAAI,GAAZ,KACCK,IAAI,CAACC,QAAL,KAAkB,EAAlB,IAAwBD,IAAI,CAACE,KAAL,KAAe,EAAvC,IAA6CF,IAAI,CAACG,QAAL,KAAkB,EADhE,CADF,EAGE;AACAhB,UAAAA,MAAM,CAACiB,IAAP,CAAY,UAAZ;AACD;;AACD,YACET,QAAQ,IAAI,UAAZ,KACCK,IAAI,CAACC,QAAL,IAAiB,EAAjB,IAAuBD,IAAI,CAACE,KAAL,IAAc,EAArC,IAA2CF,IAAI,CAACG,QAAL,IAAiB,EAD7D,CADF,EAGE;AACAhB,UAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;AACF,OAfD;AAgBD;;;6BAEQ;AAAA,wBACsC,KAAKZ,KAD3C;AAAA,UACCa,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBZ,UADvB,eACuBA,UADvB;AAEP,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AACE,QAAA,OAAO,EAAE,MAAC,SAAD,eAAeY,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADX;AAEE,QAAA,SAAS,EAAE,KAAKb,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,MAAC,SAAD,eAAea,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF,CADF;AAUD;;;;EAxCiBtB,G;;AA2CpB,oBAAeE,cAAc,CAACK,KAAD,CAA7B","sourcesContent":["import App from \"next/app\";\nimport React from \"react\";\nimport withReduxStore from \"../lib/with-redux-store\";\nimport Router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.persistor = persistStore(props.reduxStore);\n  }\n\n  componentDidMount() {\n    const { pathname } = Router;\n    console.log(pathname);\n    console.log(this.props);\n    this.props.reduxStore.subscribe(() => {\n      console.log(this.props.reduxStore.getState());\n      const { form } = this.props.reduxStore.getState();\n      if (\n        pathname == \"/\" &&\n        (form.fullName !== \"\" || form.email !== \"\" || form.password !== \"\")\n      ) {\n        Router.push(\"/profile\");\n      }\n      if (\n        pathname == \"/profile\" &&\n        (form.fullName == \"\" || form.email == \"\" || form.password == \"\")\n      ) {\n        Router.push(\"/\");\n      }\n    });\n  }\n\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n    return (\n      <Provider store={reduxStore}>\n        <PersistGate\n          loading={<Component {...pageProps} />}\n          persistor={this.persistor}\n        >\n          <Component {...pageProps} />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxStore(MyApp);\n"]},"metadata":{},"sourceType":"module"}