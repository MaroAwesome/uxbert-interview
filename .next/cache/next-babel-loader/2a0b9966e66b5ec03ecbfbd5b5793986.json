{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  form: {\n    firstName: \"test\",\n    lastName: \"\"\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"Submit\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        form: action.form\n      });\n\n    case \"TICK\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lastUpdate: action.lastUpdate,\n        light: !!action.light\n      });\n\n    case \"INCREMENT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n\n    case \"DECREMENT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - 1\n      });\n\n    case \"RESET\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: initialState.count\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(reducer, preloadedState, composeWithDevTools(applyMiddleware()));\n};","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","initialState","lastUpdate","light","count","form","firstName","lastName","reducer","state","action","type","initializeStore","preloadedState"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,KAAK,EAAE,CAHY;AAInBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,MADP;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAJa,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,6CACKF,KADL;AAEEJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAFf;;AAIF,SAAK,MAAL;AACE,6CACKI,KADL;AAEEP,QAAAA,UAAU,EAAEQ,MAAM,CAACR,UAFrB;AAGEC,QAAAA,KAAK,EAAE,CAAC,CAACO,MAAM,CAACP;AAHlB;;AAKF,SAAK,WAAL;AACE,6CACKM,KADL;AAEEL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAFvB;;AAIF,SAAK,WAAL;AACE,6CACKK,KADL;AAEEL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAFvB;;AAIF,SAAK,OAAL;AACE,6CACKK,KADL;AAEEL,QAAAA,KAAK,EAAEH,YAAY,CAACG;AAFtB;;AAIF;AACE,aAAOK,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,OAAO,MAAMG,eAAe,GAAG,CAACC,cAAc,GAAGZ,YAAlB,KAAmC;AAChE,SAAOH,WAAW,CAChBU,OADgB,EAEhBK,cAFgB,EAGhBb,mBAAmB,CAACD,eAAe,EAAhB,CAHH,CAAlB;AAKD,CANM","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst initialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  form: {\n    firstName: \"test\",\n    lastName: \"\",\n  },\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"Submit\":\n      return {\n        ...state,\n        form: action.form,\n      };\n    case \"TICK\":\n      return {\n        ...state,\n        lastUpdate: action.lastUpdate,\n        light: !!action.light,\n      };\n    case \"INCREMENT\":\n      return {\n        ...state,\n        count: state.count + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        ...state,\n        count: state.count - 1,\n      };\n    case \"RESET\":\n      return {\n        ...state,\n        count: initialState.count,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initializeStore = (preloadedState = initialState) => {\n  return createStore(\n    reducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware())\n  );\n};\n"]},"metadata":{},"sourceType":"module"}