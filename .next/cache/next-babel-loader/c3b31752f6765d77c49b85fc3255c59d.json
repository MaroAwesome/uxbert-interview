{"ast":null,"code":"var _s = $RefreshSig$(),\n    _this = this,\n    _jsxFileName = \"/Users/tcc/Desktop/uxbreit - interview/with-redux/components/counter.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar useCounter = function useCounter() {\n  _s();\n\n  var count = useSelector(function (state) {\n    return state.count;\n  });\n  var dispatch = useDispatch();\n\n  var increment = function increment() {\n    return dispatch({\n      type: 'INCREMENT'\n    });\n  };\n\n  var decrement = function decrement() {\n    return dispatch({\n      type: 'DECREMENT'\n    });\n  };\n\n  var reset = function reset() {\n    return dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    count: count,\n    increment: increment,\n    decrement: decrement,\n    reset: reset\n  };\n};\n\n_s(useCounter, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nvar Counter = function Counter() {\n  _s2();\n\n  var _useCounter = useCounter(),\n      count = _useCounter.count,\n      increment = _useCounter.increment,\n      decrement = _useCounter.decrement,\n      reset = _useCounter.reset;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Count: \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }\n  }, count)), __jsx(\"button\", {\n    onClick: increment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"+1\"), __jsx(\"button\", {\n    onClick: decrement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"-1\"), __jsx(\"button\", {\n    onClick: reset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Reset\"));\n};\n\n_s2(Counter, \"OY2mB77yCoDiVbqZaCvWS2HOZDo=\", false, function () {\n  return [useCounter];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/components/counter.js"],"names":["React","useSelector","useDispatch","useCounter","count","state","dispatch","increment","type","decrement","reset","Counter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,MAAMC,KAAK,GAAGH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAAzB;AACA,MAAME,QAAQ,GAAGJ,WAAW,EAA5B;;AACA,MAAMK,SAAS,GAAG,SAAZA,SAAY;AAAA,WAChBD,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CADQ;AAAA,GAAlB;;AAIA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,WAChBH,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CADQ;AAAA,GAAlB;;AAIA,MAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,WACZJ,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CADI;AAAA,GAAd;;AAIA,SAAO;AAAEJ,IAAAA,KAAK,EAALA,KAAF;AAASG,IAAAA,SAAS,EAATA,SAAT;AAAoBE,IAAAA,SAAS,EAATA,SAApB;AAA+BC,IAAAA,KAAK,EAALA;AAA/B,GAAP;AACD,CAhBD;;GAAMP,U;UACUF,W,EACGC,W;;;AAgBnB,IAAMS,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,oBAC2BR,UAAU,EADrC;AAAA,MACZC,KADY,eACZA,KADY;AAAA,MACLG,SADK,eACLA,SADK;AAAA,MACME,SADN,eACMA,SADN;AAAA,MACiBC,KADjB,eACiBA,KADjB;;AAEpB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAP,CADT,CADF,EAIE;AAAQ,IAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME;AAAQ,IAAA,OAAO,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF;AAUD,CAZD;;IAAMC,O;UAC2CR,U;;;KAD3CQ,O;AAcN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst useCounter = () => {\n  const count = useSelector(state => state.count)\n  const dispatch = useDispatch()\n  const increment = () =>\n    dispatch({\n      type: 'INCREMENT',\n    })\n  const decrement = () =>\n    dispatch({\n      type: 'DECREMENT',\n    })\n  const reset = () =>\n    dispatch({\n      type: 'RESET',\n    })\n  return { count, increment, decrement, reset }\n}\n\nconst Counter = () => {\n  const { count, increment, decrement, reset } = useCounter()\n  return (\n    <div>\n      <h1>\n        Count: <span>{count}</span>\n      </h1>\n      <button onClick={increment}>+1</button>\n      <button onClick={decrement}>-1</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  )\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}