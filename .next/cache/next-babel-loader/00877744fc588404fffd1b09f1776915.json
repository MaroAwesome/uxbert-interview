{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redux } from \"../lib/redux\";\nimport useInterval from \"../lib/useInterval\";\nimport Clock from \"../components/clock\";\nimport ReactDOM from \"react-dom\";\nimport Counter from \"../components/counter\";\nimport Form from \"../components/form\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  // Tick the time every second\n  var dispatch = useDispatch();\n  useInterval(function () {\n    dispatch({\n      type: \"TICK\",\n      light: true,\n      lastUpdate: Date.now()\n    });\n  }, 1000);\n  ReactDOM.render(__jsx(React.Fragment, null, __jsx(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Route, {\n    exact: true,\n    path: \"/\",\n    component: Form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(Route, {\n    path: \"/step2\",\n    component: Counter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }))));\n};\n\n_s(IndexPage, \"gH+2XmD6ztdKtkuOaxnQW2GC3t4=\", false, function () {\n  return [useDispatch, useInterval];\n});\n\n_c = IndexPage;\n\nIndexPage.getInitialProps = function (_ref) {\n  var reduxStore = _ref.reduxStore;\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  var dispatch = reduxStore.dispatch;\n  dispatch({\n    type: \"TICK\",\n    light: true,\n    lastUpdate: Date.now()\n  });\n  return {};\n};\n\nexport default _c2 = Redux(IndexPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/tcc/Desktop/uxbreit - interview/with-redux/pages/index.js"],"names":["React","useDispatch","Redux","useInterval","Clock","ReactDOM","Counter","Form","BrowserRouter","Router","Route","IndexPage","dispatch","type","light","lastUpdate","Date","now","render","getInitialProps","reduxStore"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB;AACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAE,EAAAA,WAAW,CAAC,YAAM;AAChBS,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,KAAK,EAAE,IAFA;AAGPC,MAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAHL,KAAD,CAAR;AAKD,GANU,EAMR,IANQ,CAAX;AAOAZ,EAAAA,QAAQ,CAACa,MAAT,CACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEX,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAED,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAlBD;;GAAMK,S;UAEaV,W,EACjBE,W;;;KAHIQ,S;;AAoBNA,SAAS,CAACQ,eAAV,GAA4B,gBAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC9C;AACA;AAF8C,MAGtCR,QAHsC,GAGzBQ,UAHyB,CAGtCR,QAHsC;AAI9CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,KAAK,MAFE;AAGPC,IAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAHL,GAAD,CAAR;AAMA,SAAO,EAAP;AACD,CAXD;;AAaA,qBAAef,KAAK,CAACS,SAAD,CAApB","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redux } from \"../lib/redux\";\nimport useInterval from \"../lib/useInterval\";\nimport Clock from \"../components/clock\";\nimport ReactDOM from \"react-dom\";\n\nimport Counter from \"../components/counter\";\nimport Form from \"../components/form\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst IndexPage = () => {\n  // Tick the time every second\n  const dispatch = useDispatch();\n  useInterval(() => {\n    dispatch({\n      type: \"TICK\",\n      light: true,\n      lastUpdate: Date.now(),\n    });\n  }, 1000);\n  ReactDOM.render(\n    <>\n      <Router>\n        <Route exact path=\"/\" component={Form} />\n        <Route path=\"/step2\" component={Counter} />\n      </Router>\n    </>\n  );\n};\n\nIndexPage.getInitialProps = ({ reduxStore }) => {\n  // Tick the time once, so we'll have a\n  // valid time before first render\n  const { dispatch } = reduxStore;\n  dispatch({\n    type: \"TICK\",\n    light: typeof window === \"object\",\n    lastUpdate: Date.now(),\n  });\n\n  return {};\n};\n\nexport default Redux(IndexPage);\n"]},"metadata":{},"sourceType":"module"}